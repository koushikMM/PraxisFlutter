# This is basic workflow to help you get started with Actions

name: Build,Test Release app to Firebase Hosting
on:
  push:
    branches:
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_ios:
    runs-on: ubuntu-latest

    steps:
      - name: Export Release Timestamp
        run: echo "APP_VERSION=release_$(date +'%Y-%m-%d_%H-%m-%S')" >> $GITHUB_ENV
      - uses: actions/checkout@v1
      - name: Create Firebase options from secrets
        id: write_file
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: 'firebase_options.dart'
          fileDir: '/home/runner/work/PraxisFlutter/PraxisFlutter/lib/'
          encodedString: ${{ secrets.FIREBASE_OPTIONS }}
      - name: Create GoogleService-Info.plist from secrets
        id: write_file
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: 'GoogleService-Info.plist'
          fileDir: '/home/runner/work/PraxisFlutter/ios/'
          encodedString: ${{ secrets.GoogleServiceInfo }}
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: 'Run flutter pub get'
        run: flutter pub get
      - name: 'Build iOS'
        run: flutter clean && flutter build ios --release
  build_android:
    runs-on: ubuntu-latest

    steps:
      - name: Export Release Timestamp
        run: echo "APP_VERSION=release_$(date +'%Y-%m-%d_%H-%m-%S')" >> $GITHUB_ENV
      - uses: actions/checkout@v1
      - name: Create Firebase options from secrets
        id: write_file
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: 'firebase_options.dart'
          fileDir: '/home/runner/work/PraxisFlutter/PraxisFlutter/lib/'
          encodedString: ${{ secrets.FIREBASE_OPTIONS }}
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: 'Run flutter pub get'
        run: flutter pub get
      - name: 'Build Android Apk'
        run: flutter clean && flutter build apk --release
      - name: Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.3.2
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: developers
          file: build/app/outputs/flutter-apk/app-release.apk

  build_deploy_web:
    runs-on: ubuntu-latest

    steps:
      - name: Export Release Timestamp
        run: echo "APP_VERSION=release_$(date +'%Y-%m-%d_%H-%m-%S')" >> $GITHUB_ENV
      - uses: actions/checkout@v1
      - name: Create Firebase options from secrets
        id: write_file
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: 'firebase_options.dart'
          fileDir: '/home/runner/work/PraxisFlutter/PraxisFlutter/lib/'
          encodedString: ${{ secrets.FIREBASE_OPTIONS }}
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: 'Run flutter pub get'
        run: flutter pub get
      - name: Enable flutter web
        run: flutter config --enable-web
      - name: 'Build Web App'
        run: flutter build web
      - name: deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/web
      - name: Deploy to Firebase Hosting
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}